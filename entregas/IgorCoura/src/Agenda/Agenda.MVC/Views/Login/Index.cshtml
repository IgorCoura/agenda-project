@using Agenda.MVC.ViewModel
@model LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<div class="text-center">

  <div class="form-signin w-100 m-auto">
    @using(Html.BeginForm("Index", "Login", FormMethod.Post))
    {
        <h1 class="h3 mb-3 fw-normal">Login</h1>
        <div class="form-floating">
          @Html.TextBoxFor(x => x.Username, htmlAttributes: new{@class = "form-control", @id="floatingInput", @placeholder="Username"} )
          @Html.LabelFor(x => x.Username, htmlAttributes: new{ @id="floatingInput"})
          @Html.ValidationMessageFor(x => x.Username,"", new{@class = "invalid-feedback d-block"})
        </div>
        <div class="form-floating">
          @Html.PasswordFor(x => x.Password, htmlAttributes: new{@class = "form-control", @id="floatingInput", @placeholder="Username"})
          @Html.LabelFor(x => x.Password, htmlAttributes: new{ @id="floatingInput"})
          @Html.ValidationMessageFor(x => x.Password,"", new{@class = "invalid-feedback d-block"})
        </div>
        <div class="text-end mb-2">
          <a  asp-area="" asp-controller="Login" asp-action="RegisterUser">Criar conta</a>
        </div>
        <div>
          <button class="w-100 btn btn-lg btn-primary" type="submit">LOGIN</button>
        </div>

        <div>
          <vc:Summary></vc:Summary>
        </div>
    }
  </div>
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
