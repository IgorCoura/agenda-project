@using Agenda.MVC.ViewModel
@model LoginViewModel

@{
    ViewData["Title"] = "Login";
}



<div class="text-center">

  <div class="w-100 m-auto">
    @using(Html.BeginForm("Index", "Login", FormMethod.Post))
    {
      <div>
        <h1 class="h3 mb-3 fw-normal">Login</h1>
        <div class="form-floating">
          @Html.LabelFor(x => x.Username, htmlAttributes: new{ @id="floatingInput"})
          @Html.TextBoxFor(x => x.Username, htmlAttributes: new{@class = "form-control", @id="floatingInput"} )
          @Html.ValidationMessageFor(x => x.Username,"String menssage" ,htmlAttributes: new {@class= "invalid-feedback"},"String tag")
        </div>
        <div class="form-floating">
          @Html.LabelFor(x => x.Password, htmlAttributes: new{ @id="floatingInput"})
          @Html.PasswordFor(x => x.Password, htmlAttributes: new{@class = "form-control", @id="floatingInput"})
          @Html.ValidationMessageFor(x => x.Password,"String menssage" ,htmlAttributes: new {@class= "invalid-feedback"},"String tag")
        </div>
        <div class="text-end"> 
          @Html.ActionLink("Criar Conta", "RegisterUser")
        </div>
        <div>
          <vc:Summary></vc:Summary>
        </div>
        <div>
          <button class="w-100 btn btn-lg btn-primary" type="submit">LOGIN</button>
        </div>
      </div>
    }
  </div>
</div>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
