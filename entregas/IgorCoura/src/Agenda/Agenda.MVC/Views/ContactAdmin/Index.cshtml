@using Agenda.MVC.ViewModel
@using System.Collections
@model SearchViewModel<List<ContactViewModel>>

@{
    ViewData["Title"] = "Contatos";
}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Confirmar exclusão!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Tem certeza que deseja remover esse contato selecionado?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary confirm-delete">Confirmar</button>
      </div>
    </div>
  </div>
</div>
<!--Modal-->

<div>
   <div>
     <h2>
       Contact
     </h2>
   </div>
  @using (Html.BeginForm("Index", "ContactAdmin", FormMethod.Get))
  {
     <div class="input-group mb-3">
        <div>
          @Html.DropDownListFor(x => x.Key, Model!.SearchKeys, new {@class = "form-select"})
          @Html.ValidationMessageFor(x => x.Key,"", new{@class = "invalid-feedback d-block"})
        </div>
        <div class="input-field col s8">
          @Html.TextBoxFor(x => x.Value, new {@class = "form-control rounded", @placeholder ="Search", @type = "search" })
          @Html.ValidationMessageFor(x => x.Value,"", new{@class = "invalid-feedback d-block"})
        </div>
        <div>
          <button type="submit" class="btn btn-outline-primary", name="userId", value=@TempData["userId"]>Buscar</button>
          <a class="btn btn-outline-primary" href='@Url.Action("Create", "Contact")'>
           Adicionar
         </a>
        </div>
     </div>

      @if(Model.Data.Count() == 0)
      {
          <li>Não existe telefones</li>
      }

      @for(int i = 0; i< Model.Data.Count(); i++)
      {

        var contact = @Model.Data[i];

        <div class="card mb-1">
          <div class="card-header" id="headingOne">
             <h5 class="mb-0 d-flex justify-content-between">
               <button type="button" class="btn dropdown-toggle" data-bs-toggle="collapse" data-bs-target=@("#collapseOne"+i) aria-expanded="false" aria-controls=@("#collapseOne"+i)>
                    @contact.Name
               </button>
               <div>
                 <a class="btn" href='@Url.Action("Edit", "ContactAdmin", new {id=@contact.Id, userId = TempData["userId"]})'>
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16" style="color:darkblue">
                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z"/>
                  </svg>
                 </a>
                 <button type="button" class="btn delete-btn" data-bs-toggle="modal" data-bs-target="#exampleModal" data-itemid="@contact.Id" data-userid="@TempData["userId"]" >
                   <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16" style="color:red">
                      <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>
                      <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>
                   </svg>
                 </button>
               </div>
             </h5>
          </div>
     
          <div id=@("collapseOne"+i) class="collapse" aria-labelledby=@("headingOne"+i) data-parent="#accordion">
            <div class="card-body">
              @foreach(var phone in contact.Phones)
              {
                <div class="mb-2">
                  <div>@phone.PhoneType - @phone.FormattedPhone</div>
                  <div>Descrição: @phone.Description</div>
                </div>        
              }         
            </div>
          </div>
        </div>
      }

      <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
          <li class="page-item">
            <a  class="page-link" href='@Url.Action("Index", "ContactAdmin", new {page = (Model.CurrentPage-1 < 1 ? 1 : Model.CurrentPage-1), userId = TempData["userId"]})' aria-label="Previous">
              <span aria-hidden="true">&laquo;</span>
            </a>
          </li>
            @foreach(var pagNumber in Enumerable.Range(1, Model.TotalPages))
            {
                <li class='@(Model.CurrentPage == pagNumber ? "page-item active": "page-item")'><a  class="page-link" href='@Url.Action("Index", "ContactAdmin", new {page = pagNumber, userId = TempData["userId"]})'>@pagNumber</a></li>
            }
          <li class="page-item">
            <a  class="page-link" aria-label="Next"   href='@Url.Action("Index", "ContactAdmin", new {page = (Model.CurrentPage+1 > Model.TotalPages ? Model.TotalPages : Model.CurrentPage+1), userId = TempData["userId"]})'>
              <span aria-hidden="true">&raquo;</span>
            </a>
          </li>
        </ul>
      </nav>
  }
</div>


  
@section Scripts
{
  @await Html.PartialAsync("_ValidationScriptsPartial")

  <script>
  $(document).ready(function ()  {
      $('.delete-btn').click(function() {
          const itemid = $(this).data('itemid');
          const userId = $(this).data('userid');
          $('.confirm-delete').data('userid', userId);
          $('.confirm-delete').data('itemid', itemid);
      });
      $('.confirm-delete').click(function ()  {
          const itemid = $(this).data('itemid');
          const userId = $(this).data('userid');
          const url = window.location.origin + '@Html.Raw(Url.Action("Delete", "ContactAdmin"))' + '/' + '?id=' + itemid + '&userId='+userId;
          window.location.href = url;
      });
  })
  </script>
}
